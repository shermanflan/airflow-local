apiVersion: apps/v1
kind: Deployment
metadata:
  # Unique key of the Deployment instance
  name: airflow-web-deploy
  namespace: default
  labels:
    app: airflow-web
spec:
  # Number of pods which should exist at all times
  replicas: 1
  selector:
    matchLabels:
      app: airflow-web
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  # revisionHistoryLimit: 3
  # minReadySeconds: 60
  # progressDeadlineSeconds: 600
  # Pods
  template:
    metadata:
      labels:
        # Apply this label to pods and default
        # the Deployment label selector to this value
        app: airflow-web
        # version: "1"
        # environment: "poc"
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      # Create using kubectl create secret rko.acr.io my-image-pull-secret ...
      # imagePullSecrets:
      #   - name:  my-image-pull-secret
      volumes:
        - name: "az-dags"
          persistentVolumeClaim:
            claimName: azure-claim-dags
        # Create config using kubectl create configmap
        # - name: "config"
        #   configMap:
        #     name: my-config
        # Create secret using
        # kubectl create secret tls ssl --cert=server.crt --key=server.key
        # - name: certs
        #   secret:
        #     secretName: ssl
      containers:
        - name: airflow
          image: rkovkytk.azurecr.io/airflow:1.10.12
          imagePullPolicy: Always  # IfNotPresent
          volumeMounts:
            - name: "az-dags"
              mountPath: "/opt/airflow/dags"
            # - name: "config"
            #   mountPath: "/data/my-config"
            # - name: certs
            #   mountPath: "/ssl"
            #   readOnly: true
          env:
            - name: AIRFLOW__CORE__LOGGING_LEVEL
              value: INFO
            - name: AIRFLOW__CORE__EXECUTOR
              value: SequentialExecutor
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              value: "sqlite:////opt/airflow/airflow.db"
            - name: AIRFLOW__CELERY__BROKER_URL
              value: "redis://40.76.155.221:6379/0"
            # - name: FROM_CONFIG_MAP
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: another-param
          resources:
            requests:
              cpu: "1000m"
              memory: "500Mi"
            limits:
              cpu: "2000m"
              memory: "2Gi"
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8080
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
          #   failureThreshold: 3
          #   successThreshold: 1
          # livenessProbe:
          #   exec:
          #     command:
          #       - airflow
          #       - info
          #       - --anonymize
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
---
# kubectl expose is a synonym for this stanza
apiVersion: v1
kind: Service
metadata:
  name: airflow-service
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    # Load balance traffic across Pods matching
    # this label selector
    app: airflow-web
---
